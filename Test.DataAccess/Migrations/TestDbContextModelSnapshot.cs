// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Test.DataAccess;

#nullable disable

namespace Test.DataAccess.Migrations
{
    [DbContext(typeof(TestDbContext))]
    partial class TestDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("Test.DataAccess.Entities.DiscoveryYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Year");

                    b.ToTable("DiscoveryYears");
                });

            modelBuilder.Entity("Test.DataAccess.Entities.Meteorite", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("ClassId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fall")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Mass")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100)");

                    b.Property<float>("Reclat")
                        .HasColumnType("REAL");

                    b.Property<float>("Reclong")
                        .HasColumnType("REAL");

                    b.Property<int>("UniqueId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("YearId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClassId")
                        .IsUnique();

                    b.HasIndex("Name");

                    b.HasIndex("YearId")
                        .IsUnique();

                    b.ToTable("Meteorites");
                });

            modelBuilder.Entity("Test.DataAccess.Entities.MeteoriteClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("MeteoriteClasses");
                });

            modelBuilder.Entity("Test.DataAccess.Entities.Meteorite", b =>
                {
                    b.HasOne("Test.DataAccess.Entities.MeteoriteClass", "Class")
                        .WithOne("Meteorite")
                        .HasForeignKey("Test.DataAccess.Entities.Meteorite", "ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Test.DataAccess.Entities.DiscoveryYear", "Year")
                        .WithOne("Meteorite")
                        .HasForeignKey("Test.DataAccess.Entities.Meteorite", "YearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("Test.DataAccess.Entities.DiscoveryYear", b =>
                {
                    b.Navigation("Meteorite");
                });

            modelBuilder.Entity("Test.DataAccess.Entities.MeteoriteClass", b =>
                {
                    b.Navigation("Meteorite");
                });
#pragma warning restore 612, 618
        }
    }
}
